# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:


services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller'
    tags: ['controller.service_arguments']

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  App\Command\CheckUsersHaveItemCommand:
    bind:
      $itemId: '%env(string:APP_DESTINY_SEARCH_ITEM_ID)%'

  App\Lib\Http\RequestManagerInterface:
    class: App\Lib\Http\Curl\RequestManager

  App\Lib\File\FileHandlerInterface:
    class: App\Lib\File\FileHandler

  App\Repository\Destiny\UserFileRepository:
    bind:
      $fileName: '%env(string:APP_FILE_NICKNAMES)%'

  App\Service\Result\ResultService:
    bind:
      $fileName: '%env(string:APP_FILE_RESULTS)%'

  App\Lib\Api\Destiny\ApiClientInterface:
    class: App\Service\Destiny\ApiClientDecorator
    bind:
      $apiKey: '%env(string:BUNGIE_API_KEY)%'
      $apiMaxErrors: '%env(string:API_MAX_ERRORS)%'

  OutputInterface:
    class: Symfony\Component\Console\Output\ConsoleOutput

  App\View\ResultOutput:
    bind:
      $output: '@OutputInterface'